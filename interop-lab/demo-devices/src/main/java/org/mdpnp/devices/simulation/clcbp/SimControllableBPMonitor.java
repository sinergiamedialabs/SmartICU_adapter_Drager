package org.mdpnp.devices.simulation.clcbp;

import com.rti.dds.infrastructure.*;
import com.rti.dds.publication.Publisher;
import com.rti.dds.subscription.*;
import com.rti.dds.topic.Topic;
import ice.BPObjectiveDataReader;
import ice.BPPauseResumeObjectiveDataReader;
import ice.ConnectionState;
import ice.SampleArray;
import org.mdpnp.devices.DeviceClock;
import org.mdpnp.devices.simulation.AbstractSimulatedConnectedDevice;
import org.mdpnp.rtiapi.data.EventLoop;
import org.mdpnp.rtiapi.data.EventLoop.ConditionHandler;
import org.mdpnp.rtiapi.data.QosProfiles;
import org.mdpnp.rtiapi.data.TopicUtil;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.IOException;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.TimeUnit;

/**
 * A simulated Blood Pressure Monitor, that starts out publishing BP measurements
 * using the same metrics as the physical device we are trying to emulate.  This is
 * to be used initially alongside the SimControllablePump that we also created to test
 * the behaviour of the closed loop control app.
 * 
 * @author simon
 *
 */
public class SimControllableBPMonitor extends AbstractSimulatedConnectedDevice {

	private static int fakeComPortNumber=1;

	private DeviceClock defaultClock;

	private static final Logger log = LoggerFactory.getLogger(SimControllableBPMonitor.class);

	ScheduledFuture<?> sampleEmitter;

	private float defaultSys=120;
	private float defaultDia=80;
	private float currentSys;
	private float currentDia;
	
	private Topic bpChangeTopic;
	private Topic pauseResumeTopic;
	private BPObjectiveDataReader bpReader;
	private BPPauseResumeObjectiveDataReader pauseResumeReader; 
	private QueryCondition bpQueryCondition;
	private QueryCondition pauseResumeCondition;
	
	private boolean running=true;

	/**
	 * An array of values to be used for the systolic samples.  These were taken by running the real device we are emulating
	 * and then reading the values back from the database.
	 * 
	 * TODO: Get all the values from new_floats_from_bp and see if that makes it smoother
	 * 
	 */
	Number[][] bpFloats=new Number[][] {
		{105.75,104.0,102.5625,101.5,100.8125,100.625,100.75,101.125,101.625,102.0625,102.3125,102.375,102.1875,101.625,100.6875,99.4375,97.9375,96.5,95.0625,93.75,92.625,91.625,90.8125,90.0,89.1875,88.375,87.625,87.0,86.5,86.1875,85.8125,85.5,85.125,84.8125,84.5,84.1875,83.875,83.5625,83.25,82.875,82.5,82.125,81.8125,81.5,81.25,81.0,80.875,80.8125,80.6875,80.5,80.25,80.0,79.875,79.8125,79.8125,79.8125,79.8125,79.875,79.875,79.8125,79.8125,79.8125,79.75,79.75,79.75,79.75,79.8125,79.8125,79.875,79.875,79.875,79.875,79.8125,79.875,80.3125,81.6875,84.4375,88.4375,92.875,97.0,100.625,103.75,106.375,108.625,110.5625,112.25,113.6875,114.9375,116.0,116.8125,117.5,118.125,118.75,119.25,119.625,119.8125,119.8125,119.5625,119.125,118.5625,117.9375,117.25,116.5,115.5625,114.5,113.3125,112.0625,110.6875,109.3125,107.75,106.0625,104.375,102.875,101.75,101.0,100.625,100.6875,101.0625,101.5625,102.0625,102.375,102.4375,102.25,101.6875,100.8125,99.6875,98.3125,96.8125,95.375,94.0625,92.875,91.875,91.0625,90.3125,89.5,88.625,87.8125,87.0625,86.5625,86.1875,85.875,85.5625,85.25,84.875,84.5625,84.1875,83.875,83.5,83.1875,82.875,82.5625,82.25,81.9375,81.625,81.3125,81.125,81.0,80.875,80.75,80.5625,80.375,80.1875,80.0625,79.9375,79.875,79.875,79.8125,79.8125,79.8125,79.8125,79.8125,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.8125,79.875,80.1875,81.25,83.6875,87.4375,91.8125,96.125,99.875,103.125,105.875,108.1875,110.125,111.8125,113.3125,114.625,115.75,116.625,117.375,118.0,118.625,119.1875,119.5625,119.8125,119.875,119.6875,119.3125,118.75,118.0625,117.4375,116.6875,115.8125,114.8125,113.6875,112.4375,111.125,109.75,108.25,106.625,105.0,103.5,102.1875,101.1875,100.75,100.75,101.0625,101.5,101.9375,102.25,102.4375,102.3125,101.875,101.125,100.0625,98.6875,97.1875,95.75,94.4375,93.1875,92.1875,91.3125,90.5625,89.75,88.875,88.0,87.25,86.75,86.3125},
		{86.0,85.625,85.25,84.9375,84.625,84.3125,84.0,83.6875,83.3125,83.0,82.625,82.3125,82.0,81.75,81.375,81.125,81.0,80.875,80.8125,80.625,80.375,80.125,79.9375,79.9375,79.9375,79.9375,79.9375,79.9375,79.9375,79.9375,79.9375,79.9375,79.875,79.875,79.875,79.875,79.8125,79.8125,79.875,79.875,79.875,79.875,79.875,79.875,80.0625,80.875,83.0,86.4375,90.8125,95.1875,99.0625,102.25,104.9375,107.3125,109.4375,111.375,113.0,114.3125,115.4375,116.375,117.1875,117.875,118.5,119.0625,119.5,119.8125,119.875,119.6875,119.375,118.875,118.25,117.625,116.875,116.0625,115.0,113.875,112.625,111.3125,109.9375,108.5,106.875,105.125,103.5,102.125,101.1875,100.6875,100.625,100.875,101.3125,101.8125,102.1875,102.375,102.3125,101.9375,101.25,100.25,98.9375,97.4375,95.9375,94.5625,93.3125,92.25,91.375,90.625,89.8125,89.0,88.125,87.375,86.8125,86.375,86.0,85.6875,85.25,84.9375,84.5625,84.3125,84.0,83.6875,83.375,83.0625,82.6875,82.375,82.0625,81.6875,81.3125,81.0625,80.875,80.8125,80.75,80.625,80.4375,80.1875,80.0,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.8125,79.8125,79.8125,79.875,79.875,79.875,79.9375,79.9375,79.9375,79.9375,80.0625,80.625,82.3125,85.5,89.6875,94.125,98.1875,101.625,104.625,107.125,109.3125,111.125,112.75,114.125,115.25,116.1875,116.9375,117.6875,118.3125,118.875,119.375,119.6875,119.8125,119.75,119.5,119.0625,118.4375,117.8125,117.125,116.3125,115.375,114.25,113.0,111.6875,110.3125,108.9375,107.3125,105.625,103.875,102.5,101.5,100.9375,100.8125,101.0,101.375,101.8125,102.1875,102.4375,102.4375,102.125,101.5,100.5625,99.3125,97.875,96.4375,95.0,93.6875,92.5625,91.5625,90.8125,90.0625,89.3125,88.4375,87.625,86.9375,86.4375,86.0625,85.6875,85.375,85.0625,84.75,84.5,84.125,83.8125,83.5,83.1875,82.8125,82.5,82.125,81.8125,81.5,81.25,81.0625,80.9375,80.8125,80.6875,80.4375,80.1875,80.0,79.9375,79.875,79.875,79.875,79.875,79.875,79.875},
		{79.875,79.875,79.8125,79.8125,79.8125,79.8125,79.875,79.875,79.875,79.9375,79.9375,79.9375,79.875,79.875,80.0,80.4375,81.875,84.75,88.75,93.1875,97.3125,100.875,103.9375,106.5625,108.75,110.625,112.25,113.6875,114.875,115.9375,116.75,117.5,118.125,118.75,119.3125,119.6875,119.875,119.8125,119.5625,119.125,118.5625,117.9375,117.25,116.5,115.5625,114.4375,113.1875,111.9375,110.625,109.25,107.6875,106.0,104.25,102.75,101.625,100.9375,100.625,100.75,101.1875,101.6875,102.0625,102.375,102.4375,102.25,101.6875,100.8125,99.625,98.1875,96.6875,95.25,93.9375,92.8125,91.875,91.0,90.25,89.375,88.5625,87.75,87.0625,86.625,86.1875,85.8125,85.4375,85.125,84.8125,84.4375,84.125,83.75,83.4375,83.125,82.8125,82.5,82.1875,81.8125,81.5,81.1875,81.0,80.8125,80.75,80.6875,80.4375,80.1875,80.0,79.8125,79.8125,79.8125,79.8125,79.75,79.75,79.75,79.8125,79.8125,79.875,79.875,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,80.1875,81.3125,83.875,87.75,92.125,96.375,100.0625,103.1875,105.9375,108.25,110.25,112.0,113.4375,114.6875,115.75,116.5625,117.3125,117.9375,118.625,119.1875,119.5625,119.75,119.75,119.5625,119.1875,118.6875,118.0625,117.4375,116.6875,115.8125,114.75,113.5,112.25,110.9375,109.5625,108.0625,106.4375,104.6875,103.0625,101.875,101.0625,100.625,100.625,100.9375,101.4375,101.9375,102.25,102.4375,102.25,101.8125,101.0625,99.9375,98.625,97.125,95.625,94.25,93.0,92.0,91.125,90.375,89.625,88.8125,88.0,87.25,86.75,86.3125,86.0,85.6875,85.25,84.875,84.5625,84.25,83.9375,83.625,83.3125,83.0,82.6875,82.375,82.0,81.6875,81.375,81.0625,80.875,80.8125,80.75,80.5625,80.375,80.125,79.9375,79.8125,79.8125,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.8125,79.8125,79.8125,79.8125,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,80.125,81.0,83.1875,86.75,91.125,95.375,99.25,102.5625,105.375,107.8125,109.875,111.625,113.125,114.4375,115.5625},
		{116.4375,117.1875,117.8125,118.4375,119.0625,119.5,119.75,119.8125,119.6875,119.375,118.875,118.25,117.5625,116.875,116.0,115.0,113.8125,112.5625,111.25,109.875,108.4375,106.75,105.0,103.4375,102.125,101.25,100.75,100.6875,100.9375,101.375,101.875,102.25,102.4375,102.375,101.9375,101.1875,100.1875,98.9375,97.5,96.0,94.5625,93.375,92.3125,91.375,90.625,89.8125,88.9375,88.0625,87.3125,86.75,86.3125,86.0,85.625,85.3125,84.9375,84.625,84.3125,84.0,83.6875,83.375,83.0,82.6875,82.375,82.0625,81.75,81.4375,81.125,80.9375,80.875,80.75,80.625,80.4375,80.1875,80.0,79.875,79.875,79.875,79.875,79.8125,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.9375,79.9375,79.9375,79.9375,79.9375,79.875,79.875,79.8125,79.8125,80.0,80.6875,82.5625,85.875,90.125,94.5,98.375,101.8125,104.6875,107.1875,109.3125,111.1875,112.75,114.125,115.25,116.1875,117.0,117.6875,118.3125,118.9375,119.4375,119.75,119.8125,119.6875,119.375,118.9375,118.375,117.8125,117.125,116.3125,115.25,114.0625,112.8125,111.5625,110.25,108.75,107.1875,105.4375,103.75,102.375,101.375,100.75,100.625,100.8125,101.25,101.75,102.1875,102.375,102.4375,102.125,101.5,100.5625,99.1875,97.6875,96.1875,94.8125,93.5,92.4375,91.5,90.6875,89.9375,89.125,88.25,87.4375,86.8125,86.375,86.0,85.625,85.3125,84.9375,84.625,84.375,84.0625,83.75,83.4375,83.125,82.8125,82.5,82.125,81.75,81.4375,81.1875,81.0,80.9375,80.8125,80.6875,80.5,80.25,80.0,79.875,79.8125,79.875,79.8125,79.8125,79.75,79.8125,79.8125,79.875,79.875,79.875,79.875,79.875,79.9375,79.9375,79.9375,79.875,79.875,79.875,79.875,79.875,80.0,80.4375,81.9375,84.875,89.0,93.4375,97.5625,101.125,104.1875,106.8125,108.9375,110.8125,112.4375,113.875,115.0625,116.0625,116.875,117.5625,118.1875,118.8125,119.3125,119.625,119.8125,119.8125,119.5625,119.125,118.5625,117.9375,117.25,116.5,115.5625,114.4375,113.125,111.8125,110.5,109.0625,107.5625,105.875,104.125,102.6875,101.5625,100.875,100.625,100.75,101.125},
		{101.625,102.0625,102.3125,102.375,102.1875,101.625,100.75,99.5625,98.0625,96.5625,95.125,93.875,92.6875,91.75,90.9375,90.1875,89.375,88.5,87.75,87.0625,86.5625,86.1875,85.875,85.5,85.1875,84.8125,84.5,84.125,83.8125,83.5,83.125,82.8125,82.5,82.1875,81.875,81.5625,81.3125,81.125,80.9375,80.875,80.75,80.5625,80.3125,80.125,80.0,79.875,79.875,79.8125,79.8125,79.875,79.875,79.875,79.875,79.8125,79.8125,79.8125,79.8125,79.875,79.9375,79.9375,79.875,79.875,79.875,79.875,79.875,79.9375,80.375,81.5625,84.1875,88.0625,92.5,96.6875,100.3125,103.5,106.1875,108.5,110.4375,112.0625,113.5625,114.75,115.8125,116.6875,117.4375,118.125,118.75,119.25,119.625,119.875,119.8125,119.625,119.1875,118.6875,118.0625,117.375,116.625,115.75,114.75,113.5625,112.25,110.9375,109.5625,108.0625,106.375,104.5625,103.0,101.8125,101.0,100.6875,100.75,101.125,101.625,102.0625,102.375,102.4375,102.1875,101.6875,100.9375,99.875,98.5625,97.125,95.625,94.1875,92.9375,91.9375,91.0625,90.3125,89.5,88.625,87.8125,87.1875,86.6875,86.25,85.875,85.5625,85.1875,84.875,84.5625,84.25,83.875,83.5625,83.25,82.9375,82.625,82.25,81.9375,81.5625,81.25,81.0625,80.875,80.8125,80.6875,80.5625,80.3125,80.125,80.0,79.9375,79.875,79.875,79.875,79.875,79.875,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.875,80.125,81.0625,83.3125,87.0,91.4375,95.75,99.5,102.75,105.5625,107.9375,110.0,111.6875,113.1875,114.5,115.5625,116.5,117.25,117.875,118.5,119.0625,119.5625,119.8125,119.875,119.75,119.375,118.875,118.1875,117.5625,116.8125,115.9375,114.9375,113.75,112.5,111.1875,109.8125,108.3125,106.625,104.9375,103.3125,102.0,101.125,100.6875,100.625,100.9375,101.375,101.875,102.25,102.4375,102.375,101.9375,101.1875,100.125,98.8125,97.3125,95.8125,94.4375,93.25,92.1875,91.3125,90.5625,89.75,88.9375,88.0625,87.375,86.75,86.3125,85.9375,85.625,85.25,84.9375,84.625,84.375,84.0,83.6875},
		{83.3125,83.0,82.6875,82.375,82.0625,81.6875,81.375,81.1875,81.0,80.875,80.8125,80.6875,80.4375,80.1875,80.0,79.875,79.875,79.875,79.875,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.875,79.875,79.875,79.8125,79.875,79.875,79.875,79.9375,80.0625,80.75,82.625,86.0,90.3125,94.6875,98.625,102.0625,104.9375,107.4375,109.5625,111.375,112.9375,114.3125,115.4375,116.3125,117.0625,117.75,118.375,119.0,119.5,119.8125,119.875,119.75,119.4375,118.9375,118.3125,117.6875,116.9375,116.1875,115.25,114.0625,112.8125,111.5625,110.3125,109.0625,107.625,105.9375,104.0625,102.4375,101.4375,100.875,100.6875,100.875,101.3125,101.8125,102.1875,102.375,102.375,102.0625,101.375,100.375,99.125,97.625,96.125,94.75,93.5,92.4375,91.5,90.6875,89.9375,89.0625,88.25,87.5,86.875,86.4375,86.0625,85.75,85.375,85.0,84.6875,84.375,84.0625,83.75,83.4375,83.0625,82.75,82.5,82.1875,81.8125,81.5,81.1875,81.0,80.875,80.8125,80.6875,80.4375,80.1875,80.0,79.875,79.875,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.9375,80.5,82.0625,85.125,89.25,93.6875,97.6875,101.25,104.25,106.875,109.0625,110.9375,112.5,113.875,115.0625,116.0625,116.875,117.5625,118.25,118.8125,119.3125,119.6875,119.875,119.8125,119.5,119.0625,118.4375,117.8125,117.125,116.3125,115.375,114.3125,113.0625,111.75,110.4375,109.0,107.4375,105.75,104.0625,102.625,101.5625,100.875,100.625,100.75,101.1875,101.625,102.0625,102.3125,102.375,102.125,101.5625,100.6875,99.4375,98.0,96.5,95.0625,93.8125,92.6875,91.6875,90.875,90.0625,89.25,88.4375,87.625,87.0,86.5,86.125,85.75,85.4375,85.125,84.8125,84.5,84.125,83.8125,83.4375,83.125,82.8125,82.5,82.125,81.8125,81.4375,81.1875,81.0,80.875,80.8125,80.6875,80.5,80.25,80.0,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.8125,79.8125,79.8125,79.8125,79.8125,79.875,79.875},
		{79.9375,79.875,79.875,79.875,79.875,79.875,79.9375,80.3125,81.625,84.3125,88.3125,92.75,96.9375,100.5625,103.625,106.25,108.5,110.5,112.1875,113.625,114.875,115.875,116.75,117.4375,118.125,118.75,119.25,119.6875,119.875,119.875,119.625,119.25,118.6875,118.0,117.3125,116.625,115.75,114.625,113.375,112.0625,110.75,109.375,107.8125,106.125,104.4375,102.875,101.75,101.0,100.625,100.6875,101.0625,101.5625,102.0,102.3125,102.4375,102.3125,101.75,100.875,99.6875,98.3125,96.875,95.5,94.125,92.9375,91.9375,91.0625,90.3125,89.5,88.625,87.75,87.125,86.625,86.25,85.9375,85.5625,85.1875,84.875,84.5625,84.1875,83.875,83.5,83.25,82.9375,82.625,82.3125,82.0,81.625,81.3125,81.0625,80.9375,80.875,80.75,80.625,80.375,80.1875,80.0,79.9375,79.875,79.875,79.875,79.8125,79.8125,79.8125,79.8125,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.8125,79.8125,79.8125,79.875,80.125,81.1875,83.5625,87.25,91.6875,96.0,99.75,103.0,105.8125,108.125,110.0625,111.6875,113.125,114.4375,115.5625,116.5,117.3125,118.0,118.625,119.125,119.5625,119.8125,119.875,119.6875,119.3125,118.75,118.125,117.4375,116.6875,115.8125,114.875,113.8125,112.625,111.25,109.8125,108.25,106.5625,104.8125,103.25,102.0,101.125,100.6875,100.625,100.9375,101.4375,101.875,102.25,102.4375,102.3125,101.875,101.125,100.125,98.875,97.4375,95.875,94.375,93.0625,92.0,91.1875,90.375,89.625,88.75,87.9375,87.1875,86.6875,86.25,85.875,85.5625,85.25,84.875,84.5625,84.25,83.9375,83.5625,83.25,82.9375,82.625,82.3125,82.0,81.625,81.3125,81.0625,80.875,80.8125,80.75,80.5625,80.3125,80.0625,79.9375,79.875,79.8125,79.8125,79.8125,79.8125,79.875,79.875,79.9375,79.9375,79.875,79.875,79.8125,79.8125,79.875,79.875,79.875,79.875,79.8125,79.8125,79.8125,79.875,80.0625,80.875,82.875,86.3125,90.625,94.9375,98.875,102.25,105.125,107.625,109.6875,111.5,113.0,114.375,115.5,116.4375,117.1875,117.875,118.5,119.0625,119.5,119.75,119.8125},
		{119.75,119.4375,118.9375,118.3125,117.6875,117.0,116.1875,115.1875,114.0,112.6875,111.375,110.0,108.5625,106.9375,105.25,103.5625,102.25,101.3125,100.75,100.5625,100.8125,101.3125,101.75,102.1875,102.4375,102.375,102.0,101.3125,100.3125,99.0,97.5625,96.0625,94.6875,93.4375,92.3125,91.4375,90.6875,89.875,89.0625,88.1875,87.4375,86.8125,86.375,86.0,85.625,85.3125,85.0,84.6875,84.375,84.0625,83.6875,83.375,83.0625,82.75,82.4375,82.0625,81.75,81.4375,81.1875,81.0625,80.9375,80.8125,80.6875,80.4375,80.1875,80.0,79.9375,79.875,79.875,79.875,79.875,79.875,79.875,79.8125,79.8125,79.8125,79.8125,79.8125,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.9375,80.0625,80.625,82.3125,85.4375,89.625,94.0625,98.0625,101.5625,104.5,107.0625,109.25,111.0625,112.625,114.0,115.1875,116.125,116.875,117.5625,118.25,118.8125,119.375,119.6875,119.875,119.8125,119.5625,119.0625,118.4375,117.8125,117.125,116.375,115.4375,114.25,113.0,111.75,110.4375,109.0,107.375,105.625,103.9375,102.5,101.5,100.875,100.6875,100.8125,101.3125,101.75,102.1875,102.375,102.375,102.125,101.5,100.625,99.375,97.9375,96.4375,95.0625,93.875,92.75,91.75,90.9375,90.0625,89.25,88.375,87.5,86.875,86.4375,86.0625,85.75,85.4375,85.125,84.8125,84.5,84.1875,83.8125,83.5,83.125,82.8125,82.5,82.1875,81.8125,81.4375,81.1875,80.9375,80.875,80.75,80.625,80.4375,80.1875,79.9375,79.8125,79.75,79.75,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.75,79.75,79.875,80.3125,81.75,84.5,88.5,92.9375,97.125,100.75,103.875,106.5,108.75,110.625,112.25,113.6875,114.9375,115.9375,116.75,117.4375,118.125,118.75,119.25,119.625,119.75,119.75,119.5,119.0625,118.5,117.875,117.25,116.5,115.5625,114.5,113.25,112.0,110.6875,109.3125,107.75,106.0625,104.375,102.8125,101.6875,100.9375,100.625,100.6875,101.0625,101.5625,102.0625,102.375,102.5,102.25,101.75,100.875,99.6875},
		{98.25,96.75,95.3125,94.0,92.8125,91.8125,91.0,90.25,89.5,88.625,87.8125,87.125,86.625,86.25,85.9375,85.625,85.25,84.9375,84.5625,84.1875,83.875,83.5625,83.1875,82.875,82.5,82.1875,81.875,81.5625,81.3125,81.0625,80.9375,80.8125,80.75,80.5,80.3125,80.0625,79.9375,79.875,79.8125,79.8125,79.8125,79.875,79.9375,79.875,79.875,79.875,79.875,79.875,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.875,79.875,79.9375,80.25,81.3125,83.75,87.5625,91.9375,96.1875,99.9375,103.125,105.875,108.1875,110.1875,111.875,113.375,114.625,115.6875,116.5625,117.3125,117.9375,118.5,119.0625,119.5,119.75,119.8125,119.625,119.25,118.75,118.125,117.4375,116.75,115.875,114.8125,113.5625,112.3125,111.0,109.6875,108.1875,106.5,104.75,103.125,101.875,101.0625,100.6875,100.6875,101.0,101.5,101.9375,102.3125,102.4375,102.3125,101.875,101.0625,99.9375,98.5625,97.0625,95.625,94.25,93.0625,92.0625,91.25,90.5,89.6875,88.8125,87.9375,87.1875,86.6875,86.25,85.9375,85.625,85.25,84.9375,84.5625,84.25,83.9375,83.625,83.375,83.0625,82.75,82.375,82.0,81.625,81.3125,81.0625,80.9375,80.875,80.75,80.625,80.375,80.125,79.9375,79.9375,79.875,79.875,79.875,79.875,79.875,79.875,79.8125,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.9375,79.9375,79.9375,80.125,80.9375,83.0625,86.5625,90.9375,95.3125,99.25,102.5625,105.375,107.625,109.5,111.1875,112.8125,114.3125,115.5,116.375,117.125,117.75,118.4375,119.0,119.4375,119.6875,119.8125,119.625,119.3125,118.75,118.1875,117.5,116.8125,116.0,115.0625,114.0,112.75,111.375,109.875,108.375,106.75,105.0625,103.4375,102.125,101.25,100.75,100.625,100.875,101.375,101.8125,102.1875,102.375,102.3125,101.9375,101.25,100.1875,98.875,97.375,95.9375,94.5,93.3125,92.1875,91.3125,90.5625,89.8125,89.0,88.125,87.375,86.8125,86.375,86.0,85.6875,85.3125,84.9375,84.625,84.25,83.9375,83.625,83.375,83.0625,82.75,82.375,82.0,81.6875,81.375,81.0625},
		{80.9375,80.8125,80.75,80.625,80.375,80.125,79.9375,79.875,79.875,79.875,79.9375,79.9375,79.875,79.875,79.8125,79.8125,79.8125,79.8125,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.9375,80.375,81.8125,84.875,89.3125,94.125,98.3125,101.75,104.75,107.1875,109.3125,111.1875,112.75,114.125,115.3125,116.25,117.0625,117.75,118.375,119.0,119.4375,119.75,119.875,119.8125,119.5,119.0625,118.4375,117.8125,117.0625,116.3125,115.3125,114.1875,112.9375,111.6875,110.3125,108.875,107.25,105.5,103.875,102.4375,101.4375,100.8125,100.625,100.8125,101.25,101.75,102.125,102.375,102.375,102.0625,101.5,100.5,99.25,97.8125,96.3125,94.875,93.625,92.5,91.5625,90.75,89.9375,89.125,88.3125,87.5,86.875,86.4375,86.0625,85.75,85.375,85.0625,84.75,84.4375,84.125,83.75,83.4375,83.125,82.8125,82.4375,82.0625,81.75,81.4375,81.1875,81.0,80.875,80.8125,80.6875,80.5,80.25,80.0,79.875,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.875,79.875,79.875,79.875,79.875,79.875,79.8125,79.8125,79.8125,79.8125,79.8125,79.875,79.875,79.8125,79.875,80.375,81.875,84.8125,88.875,93.25,97.375,101.0,104.0625,106.6875,108.9375,110.8125,112.4375,113.8125,115.0,116.0,116.8125,117.5,118.125,118.75,119.3125,119.6875,119.875,119.8125,119.5625,119.125,118.5625,117.9375,117.25,116.5,115.5625,114.4375,113.1875,111.875,110.5625,109.1875,107.625,105.9375,104.25,102.75,101.5625,100.875,100.625,100.75,101.125,101.625,102.0625,102.375,102.4375,102.25,101.6875,100.8125,99.5625,98.125,96.625,95.1875,93.875,92.6875,91.75,90.9375,90.125,89.3125,88.5,87.625,86.9375,86.4375,86.0625,85.75,85.375,85.0625,84.75,84.4375,84.125,83.75,83.4375,83.125,82.8125,82.5625,82.1875,81.8125,81.4375,81.1875,81.0,80.875,80.8125,80.6875,80.5,80.25,80.0625,79.9375,79.9375,79.875,79.875,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.75,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.875,80.25},
		{81.4375,84.0,87.875,92.25,96.3125,99.75,102.75,105.625,108.1875,110.3125,112.0625,113.5,114.75,115.8125,116.625,117.375,118.0625,118.6875,119.25,119.625,119.875,119.875,119.625,119.25,118.625,118.0,117.375,116.6875,115.8125,114.75,113.5625,112.25,110.9375,109.5625,108.0,106.3125,104.5625,103.0,101.8125,101.0,100.6875,100.6875,101.0625,101.5625,102.0,102.375,102.5,102.3125,101.8125,101.0,99.9375,98.5625,97.0625,95.5625,94.25,93.0,92.0,91.1875,90.375,89.625,88.75,87.875,87.1875,86.625,86.25,85.9375,85.6875,85.375,85.0,84.625,84.25,83.9375,83.5625,83.25,82.9375,82.625,82.3125,81.9375,81.5625,81.3125,81.0625,80.9375,80.8125,80.75,80.5625,80.3125,80.125,80.0,79.9375,79.9375,79.875,79.875,79.875,79.875,79.8125,79.8125,79.8125,79.8125,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.8125,79.8125,79.8125,79.875,80.125,81.0,83.25,86.875,91.25,95.625,99.4375,102.75,105.5,107.875,109.875,111.625,113.1875,114.5,115.625,116.5,117.1875,117.875,118.5625,119.1875,119.5625,119.8125,119.8125,119.625,119.25,118.75,118.125,117.5,116.8125,116.0,114.9375,113.75,112.4375,111.1875,109.875,108.4375,106.8125,105.0625,103.4375,102.125,101.1875,100.6875,100.625,100.9375,101.4375,101.875,102.25,102.375,102.3125,101.9375,101.25,100.1875,98.875,97.4375,95.9375,94.5625,93.25,92.1875,91.3125,90.625,89.9375,89.0625,88.125,87.375,86.8125,86.375,86.0,85.625,85.25,84.9375,84.5625,84.25,83.9375,83.625,83.375,83.0,82.6875,82.375,82.0625,81.6875,81.375,81.125,80.9375,80.8125,80.8125,80.6875,80.4375,80.1875,80.0,79.9375,79.9375,79.9375,79.875,79.875,79.875,79.875,79.875,79.875,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.9375,80.625,82.5,85.8125,90.125,94.5,98.5,101.875,104.6875,107.0,108.875,110.6875,112.5,114.0,115.25,116.25,117.0625,117.75,118.375,118.9375,119.4375,119.75,119.875,119.75,119.4375,118.875,118.25,117.625,116.9375,116.1875,115.25},
		{114.0625,112.8125,111.5,110.1875,108.75,107.1875,105.4375,103.75,102.3125,101.375,100.75,100.625,100.8125,101.25,101.75,102.125,102.375,102.3125,102.0,101.375,100.4375,99.125,97.625,96.125,94.75,93.5,92.375,91.5,90.75,90.0,89.1875,88.25,87.4375,86.8125,86.375,86.0625,85.6875,85.375,85.0625,84.75,84.375,84.0625,83.75,83.4375,83.125,82.8125,82.5,82.125,81.8125,81.5,81.1875,81.0,80.875,80.8125,80.625,80.4375,80.1875,80.0625,79.9375,79.9375,79.9375,79.9375,79.9375,79.9375,79.9375,79.875,79.9375,79.875,79.875,79.875,79.8125,79.8125,79.8125,79.875,79.875,79.875,79.875,79.875,79.875,79.9375,80.4375,82.0,85.0,89.125,93.625,97.6875,101.25,104.25,106.875,109.0,110.875,112.4375,113.8125,115.0,116.0625,116.875,117.5625,118.1875,118.8125,119.375,119.75,119.875,119.8125,119.5625,119.125,118.5625,117.9375,117.25,116.4375,115.5,114.375,113.125,111.8125,110.4375,109.0625,107.5,105.8125,104.0625,102.625,101.5625,100.9375,100.6875,100.8125,101.1875,101.625,102.0625,102.3125,102.375,102.125,101.5625,100.6875,99.5,98.0625,96.5625,95.125,93.875,92.75,91.75,90.9375,90.1875,89.3125,88.5,87.625,86.9375,86.5,86.125,85.8125,85.5,85.1875,84.875,84.5625,84.1875,83.875,83.5,83.1875,82.875,82.5625,82.25,81.875,81.5625,81.25,81.0,80.875,80.8125,80.625,80.4375,80.25,80.0625,79.9375,79.9375,79.875,79.875,79.875,79.8125,79.8125,79.8125,79.8125,79.875,79.875,79.875,79.8125,79.8125,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.9375,80.25,81.5,84.125,88.125,92.5625,96.75,100.4375,103.5625,106.25,108.5625,110.5,112.1875,113.625,114.8125,115.8125,116.6875,117.375,118.0625,118.6875,119.25,119.6875,119.875,119.8125,119.625,119.1875,118.625,117.9375,117.3125,116.5625,115.75,114.6875,113.4375,112.1875,110.8125,109.4375,107.9375,106.1875,104.4375,102.875,101.6875,100.9375,100.625,100.625,101.0,101.5,101.9375,102.25,102.375,102.1875,101.75,100.9375,99.75,98.375,96.875,95.375,94.0625,92.8125,91.8125,91.0,90.25},
		{89.5,88.625,87.8125,87.125,86.5625,86.1875,85.8125,85.5,85.1875,84.875,84.5,84.1875,83.875,83.5625,83.25,82.9375,82.5625,82.25,81.875,81.5625,81.25,81.0625,80.9375,80.8125,80.6875,80.5,80.25,80.0625,79.9375,79.875,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,80.125,81.125,83.5,87.1875,91.5625,95.6875,99.25,102.3125,105.25,107.875,110.0,111.75,113.25,114.5625,115.625,116.5625,117.3125,117.9375,118.5625,119.125,119.5,119.8125,119.875,119.6875,119.3125,118.8125,118.25,117.625,116.875,116.0,114.9375,113.75,112.5,111.125,109.75,108.1875,106.5,104.8125,103.25,102.0,101.1875,100.75,100.75,101.0,101.5,101.9375,102.3125,102.5,102.375,101.9375,101.1875,100.125,98.75,97.25,95.75,94.375,93.1875,92.125,91.3125,90.5,89.6875,88.875,88.0625,87.25,86.6875,86.25,85.9375,85.5625,85.25,84.9375,84.625,84.25,83.9375,83.625,83.3125,83.0,82.6875,82.375,82.0,81.6875,81.375,81.125,80.9375,80.8125,80.75,80.5625,80.375,80.125,79.9375,79.8125,79.8125,79.8125,79.875,79.875,79.9375,79.9375,79.875,79.875,79.875,79.9375,79.9375,79.875,79.875,79.8125,79.8125,79.8125,79.8125,79.875,79.875,79.9375,80.125,80.875,82.8125,86.1875,90.5,94.875,98.75,102.125,105.0,107.4375,109.5625,111.375,112.875,114.1875,115.375,116.3125,117.0625,117.6875,118.25,118.9375,119.4375,119.8125,119.875,119.75,119.4375,118.9375,118.3125,117.6875,117.0,116.1875,115.1875,114.0,112.75,111.4375,110.125,108.6875,107.0625,105.375,103.75,102.4375,101.4375,100.8125,100.625,100.875,101.3125,101.8125,102.1875,102.375,102.3125,102.0,101.3125,100.3125,99.0,97.5625,96.125,94.75,93.4375,92.375,91.4375,90.6875,89.9375,89.125,88.25,87.5,86.875,86.375,86.0,85.625,85.3125,85.0,84.6875,84.375,84.0625,83.75,83.4375,83.125,82.8125,82.4375,82.0625,81.75,81.375,81.125,80.9375,80.8125,80.75,80.625,80.4375,80.1875,80.0,79.9375},
		{79.875,79.8125,79.8125,79.8125,79.75,79.75,79.75,79.75,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.8125,79.875,79.875,79.875,79.875,80.0,80.625,82.25,85.25,89.4375,93.8125,97.8125,101.3125,104.375,106.9375,109.0625,110.9375,112.5625,114.0,115.1875,116.125,116.9375,117.5625,118.1875,118.875,119.375,119.75,119.875,119.8125,119.5,119.0,118.375,117.75,117.0,116.25,115.375,114.25,113.0,111.75,110.4375,109.0,107.4375,105.6875,103.9375,102.5,101.5,100.8125,100.5625,100.75,101.1875,101.6875,102.0625,102.375,102.375,102.1875,101.5625,100.6875,99.5,98.0,96.5,95.0625,93.75,92.625,91.625,90.8125,90.0625,89.25,88.4375,87.625,87.0,86.5,86.125,85.8125,85.4375,85.125,84.8125,84.5,84.1875,83.8125,83.5,83.1875,82.875,82.5625,82.1875,81.875,81.5,81.1875,81.0,80.875,80.75,80.6875,80.5,80.25,80.0625,79.875,79.875,79.875,79.875,79.875,79.875,79.8125,79.875,79.875,79.875,79.9375,79.9375,79.9375,79.9375,79.9375,79.875,79.875,79.875,79.875,79.875,79.875,79.9375,80.1875,81.25,83.8125,87.9375,92.6875,97.0,100.6875,103.75,106.375,108.625,110.5625,112.25,113.6875,114.9375,116.0,116.8125,117.5625,118.1875,118.75,119.25,119.625,119.8125,119.8125,119.625,119.1875,118.625,118.0,117.3125,116.5625,115.6875,114.625,113.375,112.0625,110.75,109.3125,107.8125,106.125,104.375,102.875,101.6875,101.0,100.6875,100.75,101.125,101.625,102.0,102.3125,102.375,102.1875,101.6875,100.875,99.6875,98.25,96.8125,95.375,94.0625,92.875,91.875,91.0625,90.3125,89.5,88.625,87.8125,87.125,86.625,86.1875,85.8125,85.4375,85.125,84.8125,84.5,84.25,83.9375,83.625,83.25,82.9375,82.625,82.3125,81.9375,81.625,81.25,81.0,80.8125,80.75,80.6875,80.5,80.3125,80.125,79.9375,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.875,79.9375,79.875,79.875,79.875,79.875,79.9375,79.9375,79.875,79.875,79.875,79.875,80.1875,81.25,83.6875,87.4375,91.8125,96.125,99.8125,103.0625,105.8125},
	};



	public SimControllableBPMonitor(Subscriber subscriber, Publisher publisher, EventLoop eventLoop) {
		super(subscriber, publisher, eventLoop);

		writeDeviceIdentity();
		defaultClock=new DeviceClock.WallClock();

		currentSys=defaultSys;
		currentDia=defaultDia;
		
		/**
		 * Following block of code is for receiving objectives for the BP...
		 */
		ice.BPObjectiveTypeSupport.register_type(getParticipant(), ice.BPObjectiveTypeSupport.get_type_name());
		bpChangeTopic = TopicUtil.findOrCreateTopic(getParticipant(), ice.BPObjectiveTopic.VALUE, ice.BPObjectiveTypeSupport.class);
		bpReader = (ice.BPObjectiveDataReader) subscriber.create_datareader_with_profile(bpChangeTopic,
        		QosProfiles.ice_library, QosProfiles.state,  null, StatusKind.STATUS_MASK_NONE);
		StringSeq params = new StringSeq();
        params.add("'" + deviceIdentity.unique_device_identifier + "'");
        bpQueryCondition = bpReader.create_querycondition(SampleStateKind.NOT_READ_SAMPLE_STATE,
        		ViewStateKind.ANY_VIEW_STATE, InstanceStateKind.ALIVE_INSTANCE_STATE, "unique_device_identifier = %0", params);
        eventLoop.addHandler(bpQueryCondition, new ConditionHandler() {
            private ice.BPObjectiveSeq data_seq = new ice.BPObjectiveSeq();
            private SampleInfoSeq info_seq = new SampleInfoSeq();

            @Override
            public void conditionChanged(Condition condition) {

                for (;;) {
                    try {
                        bpReader.read_w_condition(data_seq, info_seq, ResourceLimitsQosPolicy.LENGTH_UNLIMITED,
                                (ReadCondition) condition);
                        for (int i = 0; i < info_seq.size(); i++) {
                            SampleInfo si = (SampleInfo) info_seq.get(i);
                            ice.BPObjective data = (ice.BPObjective) data_seq.get(i);
                            if (si.valid_data) {
                            	try { 
                            		alterRate(data.changeBy);
                            	} catch (IOException ioe) {
                            		log.error("Failed to set pump speed", ioe);
                            		ioe.printStackTrace();
                            	}
                            }
                        }
                    } catch (RETCODE_NO_DATA noData) {
                        break;
                    } finally {
                        bpReader.return_loan(data_seq, info_seq);
                    }
                }
            }
        });
        
        /**
         * Following block of code is for receiving run/stop commands.
         */
        ice.BPPauseResumeObjectiveTypeSupport.register_type(getParticipant(), ice.BPPauseResumeObjectiveTypeSupport.get_type_name());
        pauseResumeTopic = TopicUtil.findOrCreateTopic(getParticipant(), ice.BPPauseResumeObjectiveTopic.VALUE, ice.BPPauseResumeObjectiveTypeSupport.class);
        pauseResumeReader = (ice.BPPauseResumeObjectiveDataReader) subscriber.create_datareader_with_profile(pauseResumeTopic,
        		QosProfiles.ice_library, QosProfiles.state,  null, StatusKind.STATUS_MASK_NONE);
        //We can reuse the same params that we already have, as they are only to match the device id.
        pauseResumeCondition = pauseResumeReader.create_querycondition(SampleStateKind.NOT_READ_SAMPLE_STATE,
        		ViewStateKind.ANY_VIEW_STATE, InstanceStateKind.ALIVE_INSTANCE_STATE, "unique_device_identifier = %0", params);
        eventLoop.addHandler(pauseResumeCondition, new ConditionHandler() {
            private ice.BPPauseResumeObjectiveSeq data_seq = new ice.BPPauseResumeObjectiveSeq();
            private SampleInfoSeq info_seq = new SampleInfoSeq();

            @Override
            public void conditionChanged(Condition condition) {

                for (;;) {
                    try {
                        pauseResumeReader.read_w_condition(data_seq, info_seq, ResourceLimitsQosPolicy.LENGTH_UNLIMITED,
                                (ReadCondition) condition);
                        for (int i = 0; i < info_seq.size(); i++) {
                            SampleInfo si = (SampleInfo) info_seq.get(i);
                            ice.BPPauseResumeObjective data = (ice.BPPauseResumeObjective) data_seq.get(i);
                            if (si.valid_data) {
                            	try { 
                            		pauseOrResume(data.running);
                            	} catch (IOException ioe) {
                            		log.error("Failed to set pump speed", ioe);
                            		ioe.printStackTrace();
                            	}
                            }
                        }
                    } catch (RETCODE_NO_DATA noData) {
                        break;
                    } finally {
                        pauseResumeReader.return_loan(data_seq, info_seq);
                    }
                }
            }
        });

	}

	@Override
	protected String iconResourceName() {
		// TODO Auto-generated method stub
		return "bp.png";
	}

	/**
	 * pause or resume the production of data.
	 * @param running if true, then resume, else pause.
	 * @throws IOException
	 */
	private void pauseOrResume(boolean running) throws IOException {
		this.running=running;
	}
	
	private void alterRate(float delta) throws IOException {
		currentDia+=delta;
		currentSys+=delta;
		changeAllSamples(delta);
	}
	
	private void changeAllSamples(float delta) {
		for(int i=0;i<bpFloats.length;i++) {
			Number[] floats=bpFloats[i];
			for(int j=0;j<floats.length;j++) {
				floats[j]=new Float(floats[j].floatValue()+delta);
			}
		}
	}

	@Override
	protected void writeDeviceIdentity() {
		deviceIdentity.model="Controllable BP Mon";
		super.writeDeviceIdentity();
	}

	@Override
	public boolean connect(String str) {
		//Completely fake com port property that is useful for distinguishing instances
		deviceConnectivity.comPort="com"+String.valueOf(fakeComPortNumber++);
		doBasicStuff();
		return super.connect(str);
	}

	private void doBasicStuff() {
		stateMachine.transitionIfLegal(ConnectionState.Connected, "Connected");

		//		final InstanceHolder<SampleArray> diaHolder=null;
		//		final InstanceHolder<SampleArray> sysHolder=null;

		//Instance(rosetta.MDC_FLOW_FLUID_PUMP.VALUE, "");
		System.err.println("executor is "+executor.getClass().getName());
		//We have access to "executor" - a scheduled executor service	 


		sampleEmitter=executor.scheduleAtFixedRate(new Runnable() {
			int which=0;
			InstanceHolder<SampleArray> sampleHolder=null;
			int len=bpFloats.length;
			public void run() {
				//We use the global "running" variable to allow the pause/resume objective listener to control
				//if data is being emitted or not.
				if(running) {
					sampleHolder = sampleArraySample(sampleHolder, bpFloats[which%len], rosetta.MDC_PRESS_BLD_ART_ABP.VALUE, "", 0, 
							rosetta.MDC_DIM_DIMLESS.VALUE, 120, defaultClock.instant());
					which++;
				}
			}
		}, 5, 1, TimeUnit.SECONDS);

	}

	@Override
	public void disconnect() {
		if(sampleEmitter!=null) {
			sampleEmitter.cancel(true);
		}

		super.disconnect();
	}

}
